{"version":3,"sources":["components/imageGallery/ImageGallery.module.css","components/imageGallery/imageGalleryItem/ImageGalleryItem.module.css","components/modal/Modal.module.css","components/App.module.css","components/button/Button.module.css","components/searchbar/Searchbar.js","components/imageGallery/imageGalleryItem/ImageGalleryItem.js","components/button/Button.js","components/modal/Modal.js","services/Api.js","components/imageGallery/ImageGallery.js","components/App.js","index.js","components/searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","state","inputValue","handleInput","e","value","target","setState","toLowerCase","handleSubmit","event","preventDefault","trim","props","onSubmit","alert","className","style","this","SearchForm","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","src","alt","modalUrl","onClickCurrentImage","ImageGalleryItemImage","onClick","Button","LoadMore","modalRoot","document","querySelector","Modal","onCLoseModal","code","onClose","onOverlayClose","currentTarget","window","addEventListener","overflow","removeEventListener","createPortal","Overlay","children","BASE_URL","API_KEY","fetch","then","response","json","page","ImageGallery","gallery","showModal","largeImg","error","loading","onLoadMore","prev","toggleModal","findCurrentImages","url","dataset","prevProp","prevState","a","setTimeout","imagesApi","hits","catch","console","log","finally","scrollTo","top","documentElement","scrollHeight","behavior","main","map","image","webformatURL","tags","largeImageURL","id","color","height","width","length","App","handleFormSearch","searchQuery","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8a08973d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__2J8yT\",\"main\":\"ImageGallery_main__161j_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2iCdG\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__2RaYg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3zur2\",\"Modal\":\"Modal_Modal__JzWj5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2s_Fq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__UUCg_\"};","import React, {Component} from \"react\";\nimport style from \"./Searchbar.module.css\";\nimport PropTypes from 'prop-types';\n\nclass Searchbar extends Component {\n\n    state = {\n        inputValue: '',\n    }\n\n    handleInput = (e) => {\n        const {value} = e.target;\n        this.setState({\n            inputValue: value.toLowerCase(),\n        })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        if (this.state.inputValue.trim() === '') {\n            alert(\"Введите название изображения\")\n            return;\n        }\n\n        this.props.onSubmit(this.state.inputValue);\n        this.setState({\n            inputValue: '',\n        })\n    }\n\n    render() {\n        return (\n            <header className={style.Searchbar}>\n                <form onSubmit={this.handleSubmit} className={style.SearchForm}>\n                    <button type=\"submit\" className={style.SearchFormButton}>\n                        <span className={style.SearchFormButtonLabel}>Search</span>\n                    </button>\n\n                    <input\n                        className={style.SearchFormInput}\n                        type=\"text\"\n                        autoComplete=\"off\"\n                        autoFocus\n                        placeholder=\"Search images and photos\"\n                        onChange={this.handleInput}\n                        value={this.state.inputValue}\n                    />\n                </form>\n            </header>\n        );\n    }\n}\n\nSearchbar.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n}\n\nexport default Searchbar;\n","import React from \"react\";\nimport style from \"./ImageGalleryItem.module.css\";\nimport PropTypes from 'prop-types';\n\nconst ImageGalleryItem = ({src, alt, modalUrl, onClickCurrentImage}) => {\n    return (\n        <>\n            <li className={style.ImageGalleryItem}>\n                <img\n                    src={src}\n                    alt={alt}\n                    className={style.ImageGalleryItemImage}\n                    data-url={modalUrl}\n                    onClick={onClickCurrentImage}\n                />\n            </li>\n        </>\n    );\n}\n\nImageGalleryItem.propTypes = {\n    src: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired,\n    modalUrl: PropTypes.string.isRequired,\n    onClickCurrentImage: PropTypes.func.isRequired,\n}\n\nexport default ImageGalleryItem","import React from \"react\";\nimport style from \"./Button.module.css\";\nimport PropTypes from 'prop-types';\n\nconst Button = ({LoadMore}) => {\n    return (\n        <button type=\"button\" className={style.Button} onClick={LoadMore}>Load more</button>\n    );\n}\n\nButton.propTypes = {\n    LoadMore: PropTypes.func.isRequired,\n}\n\nexport default Button;","import React, {Component} from \"react\";\nimport PropTypes from 'prop-types';\nimport style from \"./Modal.module.css\";\nimport {createPortal} from \"react-dom\";\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n    componentDidMount(e) {\n        window.addEventListener(\"keydown\", this.onCLoseModal);\n        const body = document.querySelector(\"body\");\n        body.style.overflow = \"hidden\";\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"keydown\", this.onCLoseModal);\n        const body = document.querySelector(\"body\");\n        body.style.overflow = \"auto\";\n    }\n\n    onCLoseModal = (e) => {\n        if (e.code === 'Escape') {\n            this.props.onClose();\n        }\n    }\n\n    onOverlayClose = (e) => {\n        if (e.currentTarget === e.target) {\n            this.props.onClose();\n        }\n    }\n\n    render() {\n        return createPortal(\n            <div className={style.Overlay} onClick={this.onOverlayClose}>\n                <div className={style.Modal}>\n                    {this.props.children}\n                </div>\n            </div>,\n            modalRoot,\n        );\n    }\n}\n\nModal.propTypes = {\n    onClose: PropTypes.func.isRequired,\n}\n\nexport default Modal;","const BASE_URL = \"https://pixabay.com/api/?\";\nconst API_KEY = \"23297096-fdec21a8bcbab7faa251f0233\";\n\nconst fetchQueryApi = (inputValue) => {\n    return fetch(BASE_URL + `q=${inputValue}&page=1&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`)\n        .then(response => {\n            return response.json();\n        });\n}\n\nconst fetchLoadMore = (value, page) => {\n    return fetch(BASE_URL + `q=${value}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`)\n        .then(response => response.json());\n}\n\nexport default {\n    fetchQueryApi,\n    fetchLoadMore,\n}","import React, {Component} from \"react\";\nimport style from \"./ImageGallery.module.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport PropTypes from 'prop-types';\nimport ImageGalleryItem from \"./imageGalleryItem/ImageGalleryItem\";\nimport Button from \"../button/Button\";\nimport Modal from \"../modal/Modal\";\nimport imagesApi from \"../../services/Api\";\nimport Loader from \"react-loader-spinner\";\n\nclass ImageGallery extends Component {\n\n    state = {\n        gallery: [],\n        page: 1,\n        showModal: false,\n        largeImg: '',\n        error: null,\n        loading: false,\n    }\n\n    async componentDidUpdate(prevProp, prevState) {\n\n        if (this.props.inputValue !== prevProp.inputValue) {\n            this.setState({loading: true})\n            setTimeout(() => {\n                imagesApi\n                    .fetchQueryApi(this.props.inputValue)\n                    .then(gallery => {\n                        this.setState(prevState => ({\n                            gallery: gallery.hits,\n                            page: 1,\n                        }))\n                    })\n                    .catch(error => {\n                        console.log(error)\n                        this.setState({error})\n                    })\n                    .finally(() => this.setState({loading: false}))\n            }, 500)\n        }\n\n        if (this.state.page !== prevState.page && this.state.page !== 1) {\n            this.setState({loading: true})\n            setTimeout(() => {\n                imagesApi\n                    .fetchLoadMore(this.props.inputValue, this.state.page)\n                    .then(gallery => {\n                        this.setState(prevState => ({\n                            gallery: [...prevState.gallery, ...gallery.hits]\n                        }))\n                    })\n                    .catch(error => {\n                        this.setState({error})\n                    })\n                    .finally(() => this.setState({loading: false}))\n            }, 500)\n\n        }\n\n        if (this.state.gallery !== prevState.gallery) {\n            window.scrollTo({\n                top: document.documentElement.scrollHeight,\n                behavior: \"smooth\",\n            });\n        }\n    }\n\n    onLoadMore = () => {\n        this.setState(prev => ({\n            page: prev.page + 1,\n        }))\n    }\n\n    toggleModal = () => {\n        this.setState(state => ({\n            showModal: !state.showModal,\n        }))\n    }\n\n    findCurrentImages = (e) => {\n        const url = e.target.dataset.url;\n        this.setState((prev) => ({\n            showModal: !prev.showModal,\n            largeImg: url,\n        }));\n    };\n\n    render() {\n        const {gallery, showModal, largeImg, error, loading} = this.state;\n        return (\n            <main className={style.main}>\n                {error && <h2>Введите запрос ещё раз</h2>}\n                <ul className={style.ImageGallery}>\n                    {gallery.map(image => <ImageGalleryItem\n                            src={image.webformatURL}\n                            alt={image.tags} key={image.id}\n                            modalUrl={image.largeImageURL}\n                            onClickCurrentImage={this.findCurrentImages}\n                        />\n                    )}\n                </ul>\n                {loading && <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80}/>}\n                {showModal && <Modal onClose={this.toggleModal}>\n                    <img src={largeImg} alt=\"Изображение\"/>\n                </Modal>}\n                {gallery.length > 0 && <Button LoadMore={this.onLoadMore}/>}\n\n            </main>\n        );\n    }\n}\n\nImageGallery.propTypes = {\n    inputValue: PropTypes.string.isRequired,\n}\n\nexport default ImageGallery;","import React, {Component} from \"react\";\nimport style from \"./App.module.css\";\nimport Searchbar from \"./searchbar/Searchbar\";\nimport ImageGallery from \"./imageGallery/ImageGallery\";\n\nclass App extends Component {\n\n    state = {\n        value: '',\n    }\n\n    handleFormSearch = (searchQuery) => {\n        this.setState({\n            value: searchQuery,\n        })\n    }\n\n    render() {\n        return (\n            <div className={style.App}>\n                <Searchbar onSubmit={this.handleFormSearch}/>\n                <ImageGallery inputValue={this.state.value}/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__3nP09\",\"SearchForm\":\"Searchbar_SearchForm__l0-6e\",\"SearchFormButton\":\"Searchbar_SearchFormButton__18FfJ\",\"SearchForm-button\":\"Searchbar_SearchForm-button__3pqnD\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__2QS5Z\",\"SearchFormInput\":\"Searchbar_SearchFormInput__3FzPn\"};"],"sourceRoot":""}